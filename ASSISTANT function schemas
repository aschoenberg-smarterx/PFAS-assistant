
init_product_classification_job:

{
  "name": "init_product_classification_job",
  "description": "Initiate a product classification job to determine tariff codes based on the product's attributes.",
  "api_details": {
    "method": "POST",
    "url": "https://api.smarterx.com/smarter-1-marketplace/v3beta/products/classification_jobs",
    "headers": {
      "Authorization": "Bearer YOUR_API_KEY"
    },
    "content_type": "application/json"
  },
  "parameters": {
    "type": "object",
    "properties": {
      "products": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the product"
            },
            "brand": {
              "type": "string",
              "description": "Brand of the product"
            },
            "any_key": {
              "type": "string",
              "description": "Additional attributes of the product relevant to classification"
            }
          },
          "required": ["name", "brand"]
        },
        "description": "List of products to classify, each with specified attributes",
        "maxItems": 25,
        "minItems": 1
      },
      "rules_to_evaluate": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Specific rules or decisions to evaluate for classification",
        "default": ["ALL"]
      }
    },
    "required": ["products"]
  },
  "response_mapping": {
    "201": {
      "path": "job_id",
      "description": "Product classification job initiated successfully, and job ID retrieved"
    }
  }
}



***



list_classification_jobs:

{
  "name": "list_classification_jobs",
  "description": "List all previously requested product classification jobs to review their status and retrieve job IDs.",
  "api_details": {
    "method": "GET",
    "url": "https://api.smarterx.com/smarter-1-marketplace/v3beta/products/classification_jobs",
    "headers": {
      "Authorization": "Bearer YOUR_API_KEY"
    }
  },
  "parameters": {
    "type": "object",
    "properties": {
      "page_size": {
        "type": "integer",
        "description": "The size of each page of job results",
        "default": 10
      },
      "page_token": {
        "type": "string",
        "description": "A page token, received from a previous call to this endpoint. Provide this to retrieve the subsequent page."
      }
    }
  },
  "response_mapping": {
    "200": {
      "description": "Successfully retrieved the list of classification jobs",
      "path": "jobs"
    }
  }
}



***



get_classification_job_status:

{
  "name": "get_classification_job_status",
  "description": "Check the current status of a product classification job using the job ID.",
  "api_details": {
    "method": "GET",
    "url_template": "https://api.smarterx.com/smarter-1-marketplace/v3beta/products/classification_jobs/{job_id}",
    "headers": {
      "Authorization": "Bearer YOUR_API_KEY"
    }
  },
  "parameters": {
    "type": "object",
    "properties": {
      "job_id": {
        "type": "string",
        "description": "The unique identifier for the classification job"
      }
    },
    "required": ["job_id"]
  },
  "response_mapping": {
    "200": {
      "description": "Successfully retrieved the job status",
      "path": "product_classification_jobs[0].decision_results[0].rule_results[0].result"
    },
    "401": {
      "description": "Unauthorized request - Check the API key"
    },
    "404": {
      "description": "Job ID not found - Check the job_id provided"
    },
    "500": {
      "description": "Internal server error - The server encountered an unexpected condition"
    }
  }
}



***



get_product_ingredients:

{
  "name": "get_product_ingredients",
  "description": "Retrieve the ingredients list for a given product based on its name, brand, and optionally UPC.",
  "api_details": {
    "method": "GET",
    "url": "https://rslsmarterx.replit.app/classify/product_ingredients",
    "headers": {
      "Authorization": "None"
    }
  },
  "parameters": {
    "type": "object",
    "properties": {
      "product_name": {
        "type": "string",
        "description": "The name of the product for which ingredients are needed."
      },
      "brand_name": {
        "type": "string",
        "description": "The brand name of the product."
      },
      "upc": {
        "type": "string",
        "description": "The UPC of the product (optional).",
        "required": false
      }
    },
    "required": ["product_name", "brand_name"]
  },
  "response_mapping": {
    "200": {
      "description": "Successful response with ingredients list",
      "path": "ingredients_list"
    },
    "400": {
      "description": "Bad request - check parameter validity"
    },
    "500": {
      "description": "Internal server error - check server logs"
    }
  }
}
